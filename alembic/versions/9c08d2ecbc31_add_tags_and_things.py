"""add tags and things

Revision ID: 9c08d2ecbc31
Revises: b2ed7dd418f4
Create Date: 2022-12-23 11:41:27.632987

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "9c08d2ecbc31"
down_revision = "b2ed7dd418f4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "mention_tags",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "tags_for_users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("user_chat_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_chat_id", "user_id"],
            ["users.chat", "users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "user_chat_id", "tag_id"),
    )
    op.drop_table("account")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), nullable=False),
        sa.Column("description", sa.VARCHAR(length=200), nullable=True),
        sa.PrimaryKeyConstraint("id", name="sys_c0021129"),
        oracle_compress="QUERY HIGH ROW LEVEL LOCKING",
    )
    op.drop_table("tags_for_users")
    op.drop_table("mention_tags")
    op.drop_table("tags")
    # ### end Alembic commands ###
